// <auto-generated />
using System;
using Lecture12.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Lecture12.Entities.Migrations
{
    [DbContext(typeof(SuperheroContext))]
    [Migration("20201125001255_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Lecture12.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Lecture12.Entities.Power", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PowerId")
                        .HasColumnType("int");

                    b.Property<int?>("SuperheroId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("PowerId");

                    b.HasIndex("SuperheroId");

                    b.ToTable("Powers");
                });

            modelBuilder.Entity("Lecture12.Entities.Superhero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AlterEgo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<int?>("FirstAppearance")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Occupation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Superheroes");
                });

            modelBuilder.Entity("Lecture12.Entities.Power", b =>
                {
                    b.HasOne("Lecture12.Entities.Power", null)
                        .WithMany("Superheroes")
                        .HasForeignKey("PowerId");

                    b.HasOne("Lecture12.Entities.Superhero", null)
                        .WithMany("Powers")
                        .HasForeignKey("SuperheroId");
                });

            modelBuilder.Entity("Lecture12.Entities.Superhero", b =>
                {
                    b.HasOne("Lecture12.Entities.City", "City")
                        .WithMany("Superheroes")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("City");
                });

            modelBuilder.Entity("Lecture12.Entities.City", b =>
                {
                    b.Navigation("Superheroes");
                });

            modelBuilder.Entity("Lecture12.Entities.Power", b =>
                {
                    b.Navigation("Superheroes");
                });

            modelBuilder.Entity("Lecture12.Entities.Superhero", b =>
                {
                    b.Navigation("Powers");
                });
#pragma warning restore 612, 618
        }
    }
}
